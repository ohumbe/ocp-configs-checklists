# copy ca cert to trust store and update trust store
sudo cp local_lab.pem /etc/pki/ca-trust/source/anchors/ca-local-lab.crt
sudo update-ca-trust

# validate the certs can be verified
openssl verify api.ds.local.lab.pem
openssl verify apps.ds.local.lab.pem

# create secret for api certificate
oc create secret tls api-ds-local-lab --cert=api.ds.local.lab.pem --key=ds.local.lab.key -n openshift-config

# back up the apiserver-cluster-config
oc get -o yaml apiserver cluster > apiserver.cluster.yaml

# patch the api server
oc patch apiserver cluster --type=merge -p '{"spec":{"servingCerts": {"namedCertificates": [{"names": ["api.ds.local.lab"], "servingCertificate": {"name": "api-ds-local-lab"}}]}}}'

# validate it got updated
oc get -o yaml apiserver cluster

# create configmap for the ca for the api certificate
oc create cm custom-ca-ds-local-lab --from-file=ca-bundle.crt=local_lab.pem -n openshift-config

# update the proxy config with the api server ca cert
oc patch proxy/cluster --type=merge --patch='{"spec":{"trustedCA":{"name":"custom-ca-ds-local-lab"}}}'

# create secret for wildcard certificate
oc create secret tls apps-ds-local-lab --cert=apps.ds.local.lab.pem --key=ds.local.lab.key -n openshift-ingress

# patch the ingress controller, need to do this insecurely now
oc patch ingresscontroller.operator default --type=merge -p '{"spec":{"defaultCertificate": {"name": "apps-ds-local-lab"}}}' -n openshift-ingress-operator --insecure-skip-tls-verify=true

# nodes will reboot at this point, wait for them to finish
watch oc get nodes --insecure-skip-tls-verify=true

# at this point, the original kubeconfig file needs to be regenerated
# 
